geom_line() +
geom_line(data = df_RP_eAMOpos, aes(x = RP, y = wind_AMOpos,color='AMOpos')) +
geom_line(data = df_RP_eAMOneg, aes(x = RP, y = wind_AMOneg,color='AMOneg')) +
scale_x_continuous(limits = lim, trans = "log10", breaks = breaks, labels = comma) +
scale_y_continuous(limits = c(54, 220)) +
xlab("Return Period [yr]") + ylab("Windspeed [mph]") +
scale_color_manual(name='Alternative Distributions',
breaks=c('AMO.Calc.Years','AMOpos','AMOneg'),
values=c('AMO.Calc.Years'='#377eb8','AMOpos'='#08519c','AMOneg'='#6baed6'))
p_RP_event_HU_ENSO <- ggplot(data = df_RP_eENSO.Calc.Years, aes(x = RP, y = wind_ENSO.Calc.Years,color='ENSO.Calc.Years')) +
geom_line() +
geom_line(data = df_RP_eelnino, aes(x = RP, y = wind_elnino,color='elnino')) +
geom_line(data = df_RP_elanina, aes(x = RP, y = wind_lanina,color='lanina')) +
scale_x_continuous(limits = lim, trans = "log10", breaks = breaks, labels = comma) +
scale_y_continuous(limits = c(54, 220)) +
xlab("Return Period [yr]") + ylab("Windspeed [mph]") +
scale_color_manual(name='Alternative Distributions',
breaks=c('ENSO.Calc.Years','elnino','lanina'),
values=c('ENSO.Calc.Years'='#4daf4a','elnino'='#bae4b3','lanina'='#006d2c'))
p_RP_event_HU_nosulfate <- ggplot(data = df_RP_eReliable.Landfall.Years, aes(x = RP, y = wind_Reliable.Landfall.Years, color='Reliable.Landfall.Years')) +
geom_line() +
geom_line(data = df_RP_enosulfate, aes(x = RP, y = wind_nosulfate,color='nosulfate')) +
scale_x_continuous(limits = lim, trans = "log10", breaks = breaks, labels = comma) +
scale_y_continuous(limits = c(54, 220)) +
xlab("Return Period [yr]") + ylab("Windspeed [mph]") +
scale_color_manual(name='Alternative Distributions',
breaks=c('Reliable.Landfall.Years', 'nosulfate'),
values=c('Reliable.Landfall.Years'='#e41a1c','nosulfate'='#ff7f00'))
p_RP_event_HU_LTR
lim <- c(2,250)
breaks <- c(2, 5, 10, 20, 30, 50, 100, 200, 250)
p_RP_event_HU_LTR <- ggplot(data = df_RP_eAll.Data, aes(x = RP, y = wind_All.Data,color='All.Data')) +
geom_line() +
geom_line(data = df_RP_eReliable.Landfall.Years, aes(x = RP, y = wind_Reliable.Landfall.Years, color='Reliable.Landfall.Years')) +
geom_line(data = df_RP_eAMO.Calc.Years, aes(x = RP, y = wind_AMO.Calc.Years,color='AMO.Calc.Years')) +
geom_line(data = df_RP_eENSO.Calc.Years, aes(x = RP, y = wind_ENSO.Calc.Years,color='ENSO.Calc.Years')) +
scale_x_log10(limits = lim, breaks = breaks) +
scale_y_continuous(limits = c(54, 220)) +
xlab("Return Period [yr]") + ylab("Windspeed [mph]") +
scale_color_manual(name='Alternative Distributions',
breaks=c('All.Data','Reliable.Landfall.Years','AMO.Calc.Years','ENSO.Calc.Years'),
values=c('All.Data' = '#984ea3','Reliable.Landfall.Years'='#e41a1c',  'AMO.Calc.Years'='#377eb8','ENSO.Calc.Years'='#4daf4a'))
p_RP_event_HU_AMO <- ggplot(data = df_RP_eAMO.Calc.Years, aes(x = RP, y = wind_AMO.Calc.Years,color='AMO.Calc.Years')) +
geom_line() +
geom_line(data = df_RP_eAMOpos, aes(x = RP, y = wind_AMOpos,color='AMOpos')) +
geom_line(data = df_RP_eAMOneg, aes(x = RP, y = wind_AMOneg,color='AMOneg')) +
scale_x_log10(limits = lim, breaks = breaks) +
scale_y_continuous(limits = c(54, 220)) +
xlab("Return Period [yr]") + ylab("Windspeed [mph]") +
scale_color_manual(name='Alternative Distributions',
breaks=c('AMO.Calc.Years','AMOpos','AMOneg'),
values=c('AMO.Calc.Years'='#377eb8','AMOpos'='#08519c','AMOneg'='#6baed6'))
p_RP_event_HU_ENSO <- ggplot(data = df_RP_eENSO.Calc.Years, aes(x = RP, y = wind_ENSO.Calc.Years,color='ENSO.Calc.Years')) +
geom_line() +
geom_line(data = df_RP_eelnino, aes(x = RP, y = wind_elnino,color='elnino')) +
geom_line(data = df_RP_elanina, aes(x = RP, y = wind_lanina,color='lanina')) +
scale_x_log10(limits = lim, breaks = breaks) +
scale_y_continuous(limits = c(54, 220)) +
xlab("Return Period [yr]") + ylab("Windspeed [mph]") +
scale_color_manual(name='Alternative Distributions',
breaks=c('ENSO.Calc.Years','elnino','lanina'),
values=c('ENSO.Calc.Years'='#4daf4a','elnino'='#bae4b3','lanina'='#006d2c'))
p_RP_event_HU_nosulfate <- ggplot(data = df_RP_eReliable.Landfall.Years, aes(x = RP, y = wind_Reliable.Landfall.Years, color='Reliable.Landfall.Years')) +
geom_line() +
geom_line(data = df_RP_enosulfate, aes(x = RP, y = wind_nosulfate,color='nosulfate')) +
scale_x_log10(limits = lim, breaks = breaks) +
scale_y_continuous(limits = c(54, 220)) +
xlab("Return Period [yr]") + ylab("Windspeed [mph]") +
scale_color_manual(name='Alternative Distributions',
breaks=c('Reliable.Landfall.Years', 'nosulfate'),
values=c('Reliable.Landfall.Years'='#e41a1c','nosulfate'='#ff7f00'))
p_RP_event_HU_LTR
p_RP_event_HU_AMO
require("knitr")
opts_knit$set(root.dir = '~/Dropbox/proj_SBRI/R_code') # Change this before running!
knitr::opts_chunk$set(class.source='fold-show')
# Install and load the packages below:
library(dplyr, warn.conflicts = FALSE)
library(DBI)
library(RSQLite)
library(tidyverse)
library(splitstackshape)
library(stringr)
library(scales)
library(plotly)
library(ggmap)
library(hacksaw)
source("All_functions.R")
# Connect to the local SQLite database
conv_YELTs <- dbConnect(RSQLite::SQLite(), "maximuminformation_convex.db")
# Figure out what tables exist in the database
tables <- dbListTables(conv_YELTs)
# Extract the two tables: one with details of the events and the other with details of the losses
Events_Conv <- tbl(conv_YELTs, "cvx_airv9_eventinfo")
ILC_Conv <- tbl(conv_YELTs, "cvx_airv9_ilc")
# Dataframe with all losses
df_losses <- as.data.frame(
ILC_Conv
)
# Convert losses to numeric
df_losses <- df_losses %>%
mutate(ILCLoss = as.numeric(ILCLoss))
# Exact the losses for the US due to hurricanes
df_losses_US <- df_losses %>%
filter(ModelCode == "27") %>% # NAHU
filter(CountryCode == "US")
# Aggregate losses by event for the US for hurricanes
df_agg_losses_US <- df_losses_US %>%
group_by(AirEventid) %>%
mutate(agg_loss = sum(ILCLoss)) %>%
distinct(AirEventid, .keep_all=TRUE) %>%
select(!c(ILCLoss, AreaCode, SubareaName))
# Dataframe with all events
df_events <- as.data.frame(
Events_Conv
)
# Split "Event Description" column
new_df_events <- cSplit(df_events, 'EventDescription', ';')
# Save initial columns
first_cols <- new_df_events %>% dplyr::select( !starts_with("EventDescription") )
# Names of "Event Description" (resulting from splitting)
event_descr_cols <- new_df_events %>% filter(EventID == "270167631") %>%
dplyr::select(starts_with("EventDescription")) %>% colnames
# Split each "Event Description" column into two columns. The columns on the left of "=" have a name ending with "_1"
# the others with "_2"
new_df_events <- cSplit(new_df_events, event_descr_cols, "=")
# Save names of the new columns (left of "=")
colnams <- new_df_events %>% filter(EventID == "270167631") %>%
dplyr::select(starts_with("EventDescription") & ends_with("_1")) %>% as.vector %>% unlist
# Save values of the new columns (right of "=")
vals <- new_df_events %>% dplyr::select(starts_with("EventDescription") & ends_with("_2"))
# Assign names to vals
colnames(vals) <- colnams
# Combine initial columns with cleaned columns from "Event Description" column to get a clean events dataframe
clean_df_events <- cbind(first_cols, vals) %>%
select(-c(8:12)) # remove duplicate columns
# Extract all Area Codes of the US
US_area_codes <- df_losses %>% filter(CountryCode == "US") %>%
distinct(AreaCode) %>% as.vector %>% unlist
# Create dataframe with all events that made landfall in the US at least once
df_events_US_landf <- clean_df_events %>%
filter(Area1 %in% US_area_codes & Landfall1 == "L" |
Area2 %in% US_area_codes & Landfall2 == "L" |
Area3 %in% US_area_codes & Landfall3 == "L" |
Area4 %in% US_area_codes & Landfall4 == "L" |
Area5 %in% US_area_codes & Landfall5 == "L" |
Area6 %in% US_area_codes & Landfall6 == "L" |
Area7 %in% US_area_codes & Landfall7 == "L" |
Area8 %in% US_area_codes & Landfall8 == "L")
# Maximum windspeeds of each landfall/bypass for all events
maxwinds <-  df_events_US_landf %>% select(starts_with("MaxWind")) %>% as.matrix
class(maxwinds) <- "numeric"
# Matrix with all Areas
areas_land <- df_events_US_landf %>% select(starts_with("Area")) %>% as.matrix
# Matrix with landfalls
land_bypas <- df_events_US_landf %>% select(starts_with("Landfall")) %>% as.matrix
# Index of landfall corresponding to max wind speed for each event
# i_max_wind <- apply(maxwinds * as.integer(land_bypas == "L"), 1, which.max)
# Matrix with all Areas in the US that made landfall
landfall_US <- (areas_land %in% US_area_codes) & land_bypas == "L"
# Add column to dataframe with flag of where event reaches max windspeed at landfall in the US
df_events_US_landf$i_max_wind_US <- sapply(1:nrow(areas_land), function(ii) which.max(as.numeric(landfall_US[ii, ]) * maxwinds[ii, ]))
# Column with max windspeed per event at landfalls in the US
df_events_US_landf$MaxWind_US <- sapply(1:nrow(areas_land), function(ii) max(as.numeric(landfall_US[ii, ]) * maxwinds[ii, ]))
# Saffir-Simpson hurricane category of each event
SaffSimpsons <- df_events_US_landf %>% select(starts_with("SaffSimpson")) %>% as.matrix
df_events_US_landf$SaffSimpson_max_wind <- sapply(1:nrow(SaffSimpsons), function(ii) SaffSimpsons[ii,df_events_US_landf$i_max_wind_US[ii]])
# Add to events dataframe column with losses for that event that have been incurred in the US
df_only_agg_losses_US <- df_agg_losses_US[,c("AirEventid","agg_loss")]
df_events_US_landf_losses <- left_join(df_events_US_landf,df_only_agg_losses_US, by = c("EventID" = "AirEventid"))
# where event ID with no loss attached set loss to zero
df_events_US_landf_losses$agg_loss[is.na(df_events_US_landf_losses$agg_loss)] <- 0
#### Extract per each event lat lon of max wind at landfall
# Matrix with all lat
lats <- df_events_US_landf %>% select(starts_with("Latitude")) %>% as.matrix
# Column with lat corresponding to max wind
df_events_US_landf$lat_maxwind <- sapply(1:nrow(lats), function(ii) lats[ii,df_events_US_landf$i_max_wind_US[ii]])
df_events_US_landf <- df_events_US_landf %>%
mutate(lat_maxwind = as.numeric(lat_maxwind))
# Matrix with all lon
lons <- df_events_US_landf %>% select(starts_with("Longitude")) %>% as.matrix
# Column with lat corresponding to max wind
df_events_US_landf$lon_maxwind <- sapply(1:nrow(lons), function(ii) lons[ii,df_events_US_landf$i_max_wind_US[ii]])
df_events_US_landf <- df_events_US_landf %>%
mutate(lon_maxwind = as.numeric(lon_maxwind))
# Split AIR cat 1 into Tropical Storms and cat 1 (above 74)
df_events_US_landf_losses <- df_events_US_landf_losses %>%
mutate(SaffSimpson_max_wind = replace(SaffSimpson_max_wind, MaxWind_US <= 74, 0))
# Exclude tropical storms
df_events_US_landf_losses_cat1_5 <- filter(df_events_US_landf_losses, SaffSimpson_max_wind != 0)
View(wind_All.Data)
# Separate events into two buckets, Cat1-3 and Cat4-5
df_events_US_landf_losses_cat1_5 <- mutate(df_events_US_landf_losses_cat1_5,
TwoBinClass = case_when((SaffSimpson_max_wind >= 1 & SaffSimpson_max_wind <=3) ~1,
(SaffSimpson_max_wind >= 4 & SaffSimpson_max_wind <=5) ~2))
# All observed magnitudes for events with losses associated with them
obs_intensity_by_cat <- list()
for(ii in 1:2){
obs_intensity_by_cat[[ii]] <- df_events_US_landf_losses_cat1_5$MaxWind_US[ which(df_events_US_landf_losses_cat1_5$TwoBinClass == ii) ]
}
# List with losses for events in each category
obs_loss_by_cat <- list()
for(ii in 1:2){
obs_loss_by_cat[[ii]] <- df_events_US_landf_losses_cat1_5$agg_loss[ which(df_events_US_landf_losses_cat1_5$TwoBinClass == ii) ]
}
# Hurricane rates
All.Data <- c(1.4235, 0.1588)
Reliable.Landfall.Years <- c(1.2975, 0.1901)
AMO.Calc.Years <- c(1.3949, 0.1528)
ENSO.Calc.Years <- c(1.1111, 0.1806)
AMOpos <- c(1.5385, 0.1758)
AMOneg <- c(1.2344, 0.125)
nosulfate <- c(1.507, 0.1972)
elnino <- c(0.6111, 0.1667)
lanina <- c(1.5, 0.1667)
Knutson2013 <- c(0.8812,0.2642)
Knutson2015 <- c(1.0838,0.2699)
Wehner2018 <- c(1.1104,0.2433)
Knutson2020 <- c(1.0443,0.2053)
n_samples <- 1e3
n_bin <- 2
Rank <- 1:n_samples
Prob  <- Rank/(length(Rank) + 1)
RP <- 1/Prob
# All.Data
obj_All.Data <- Resample(n_samples,n_bin,All.Data,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_All.Data <- unlist(obj_All.Data[1])
df_RP_eAll.Data <- data.frame(wind_All.Data,RP)
loss_All.Data <- matrix(obj_All.Data[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lAll.Data <- data.frame(loss_All.Data,RP)
decr_OEP_loss_All.Data <- matrix(obj_All.Data[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lAll.Data <- data.frame(decr_OEP_loss_All.Data,RP)
## Reliable.Landfall.Years
obj_Reliable.Landfall.Years <- Resample(n_samples,n_bin,Reliable.Landfall.Years,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_Reliable.Landfall.Years <- unlist(obj_Reliable.Landfall.Years[1])
df_RP_eReliable.Landfall.Years <- data.frame(wind_Reliable.Landfall.Years,RP)
loss_Reliable.Landfall.Years <- matrix(obj_Reliable.Landfall.Years[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lReliable.Landfall.Years <- data.frame(loss_Reliable.Landfall.Years,RP)
decr_OEP_loss_Reliable.Landfall.Years <- matrix(obj_Reliable.Landfall.Years[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lReliable.Landfall.Years <- data.frame(decr_OEP_loss_Reliable.Landfall.Years,RP)
## AMO.Calc.Years
obj_AMO.Calc.Years <- Resample(n_samples,n_bin,AMO.Calc.Years,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_AMO.Calc.Years <- unlist(obj_AMO.Calc.Years[1])
df_RP_eAMO.Calc.Years <- data.frame(wind_AMO.Calc.Years,RP)
loss_AMO.Calc.Years <- matrix(obj_AMO.Calc.Years[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lAMO.Calc.Years <- data.frame(loss_AMO.Calc.Years,RP)
decr_OEP_loss_AMO.Calc.Years <- matrix(obj_AMO.Calc.Years[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lAMO.Calc.Years <- data.frame(decr_OEP_loss_AMO.Calc.Years,RP)
## ENSO.Calc.Years
obj_ENSO.Calc.Years <- Resample(n_samples,n_bin,ENSO.Calc.Years,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_ENSO.Calc.Years <- unlist(obj_ENSO.Calc.Years[1])
df_RP_eENSO.Calc.Years <- data.frame(wind_ENSO.Calc.Years,RP)
loss_ENSO.Calc.Years <- matrix(obj_ENSO.Calc.Years[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lENSO.Calc.Years <- data.frame(loss_ENSO.Calc.Years,RP)
decr_OEP_loss_ENSO.Calc.Years <- matrix(obj_ENSO.Calc.Years[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lENSO.Calc.Years<- data.frame(decr_OEP_loss_ENSO.Calc.Years,RP)
# AMOpos
obj_AMOpos <- Resample(n_samples,n_bin,AMOpos,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_AMOpos <- unlist(obj_AMOpos[1])
df_RP_eAMOpos <- data.frame(wind_AMOpos,RP)
loss_AMOpos <- matrix(obj_AMOpos[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lAMOpos <- data.frame(loss_AMOpos,RP)
decr_OEP_loss_AMOpos <- matrix(obj_AMOpos[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lAMOpos <- data.frame(decr_OEP_loss_AMOpos,RP)
# AMOneg
obj_AMOneg <- Resample(n_samples,n_bin,AMOneg,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_AMOneg <- unlist(obj_AMOneg[1])
df_RP_eAMOneg <- data.frame(wind_AMOneg,RP)
loss_AMOneg <- matrix(obj_AMOneg[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lAMOneg <- data.frame(loss_AMOneg,RP)
decr_OEP_loss_AMOneg <- matrix(obj_AMOneg[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lAMOneg <- data.frame(decr_OEP_loss_AMOneg,RP)
## nosulfate
obj_nosulfate <- Resample(n_samples,n_bin,nosulfate,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_nosulfate <- unlist(obj_nosulfate[1])
df_RP_enosulfate <- data.frame(wind_nosulfate,RP)
loss_nosulfate <- matrix(obj_nosulfate[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lnosulfate <- data.frame(loss_nosulfate,RP)
decr_OEP_loss_nosulfate <- matrix(obj_nosulfate[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lnosulfate <- data.frame(decr_OEP_loss_nosulfate,RP)
## elnino
obj_elnino <- Resample(n_samples,n_bin,elnino,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_elnino <- unlist(obj_elnino[1])
df_RP_eelnino <- data.frame(wind_elnino,RP)
loss_elnino <- matrix(obj_elnino[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lelnino <- data.frame(loss_elnino,RP)
decr_OEP_loss_elnino <- matrix(obj_elnino[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lelnino <- data.frame(decr_OEP_loss_elnino,RP)
## lanina
obj_lanina <- Resample(n_samples,n_bin,lanina,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_lanina <- unlist(obj_lanina[1])
df_RP_elanina <- data.frame(wind_lanina,RP)
loss_lanina <- matrix(obj_lanina[2][[1]], nrow = n_samples, ncol = 1)
df_RP_llanina <- data.frame(loss_lanina,RP)
decr_OEP_loss_lanina  <- matrix(obj_lanina [3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_llanina  <- data.frame(decr_OEP_loss_lanina,RP)
## Knutson2013
obj_Knutson2013 <- Resample(n_samples,n_bin,Knutson2013,obs_intensity_by_cat,obs_loss_by_cat)
wind_Knutson2013 <- unlist(obj_Knutson2013[1])
df_RP_eKnutson2013 <- data.frame(wind_Knutson2013,RP)
loss_Knutson2013 <- matrix(obj_Knutson2013[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lKnutson2013 <- data.frame(loss_Knutson2013,RP)
## Knutson2015
obj_Knutson2015 <- Resample(n_samples,n_bin,Knutson2015,obs_intensity_by_cat,obs_loss_by_cat)
wind_Knutson2015 <- unlist(obj_Knutson2015[1])
df_RP_eKnutson2015 <- data.frame(wind_Knutson2015,RP)
loss_Knutson2015 <- matrix(obj_Knutson2015[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lKnutson2015 <- data.frame(loss_Knutson2015,RP)
## Wehner2018
obj_Wehner2018 <- Resample(n_samples,n_bin,Wehner2018,obs_intensity_by_cat,obs_loss_by_cat)
wind_Wehner2018 <- unlist(obj_Wehner2018[1])
df_RP_eWehner2018 <- data.frame(wind_Wehner2018,RP)
loss_Wehner2018 <- matrix(obj_Wehner2018[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lWehner2018 <- data.frame(loss_Wehner2018,RP)
## Knutson2020
obj_Knutson2020 <- Resample(n_samples,n_bin,Knutson2020,obs_intensity_by_cat,obs_loss_by_cat)
wind_Knutson2020 <- unlist(obj_Knutson2020[1])
df_RP_eKnutson2020 <- data.frame(wind_Knutson2020,RP)
loss_Knutson2020 <- matrix(obj_Knutson2020[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lKnutson2020 <- data.frame(loss_Knutson2020,RP)
View(wind_All.Data)
Vire(df_RP_eAll.Data)
View(df_RP_eAll.Data)
View(df_RP_eelnino)
View(df_RP_elanina)
View(df_RP_eReliable.Landfall.Years)
n_samples=1000
n_bin=2
rates=lanina
pois_distr <- matrix(NA, nrow = n_samples, ncol = n_bin)
# Hazard
sim_events  <- list()
#set.seed(123)
for (ii in 1:n_samples){
sim_events[[ii]] <- list()
for (jj in 1:n_bin){
if(length(obs_intensity_by_cat[[jj]]) == 0){
sim_events[[ii]][[jj]] = 0
}
else{
# print(ii)
#print(jj)
sim_events[[ii]][[jj]] <- sample(obs_intensity_by_cat[[jj]],pois_distr[ii,jj],replace = TRUE)
}
}
}
for (jj in 1:n_bin){
pois_distr[,jj] <- rpois(n_samples,rates[jj])
}
# Hazard
sim_events  <- list()
#set.seed(123)
for (ii in 1:n_samples){
sim_events[[ii]] <- list()
for (jj in 1:n_bin){
if(length(obs_intensity_by_cat[[jj]]) == 0){
sim_events[[ii]][[jj]] = 0
}
else{
# print(ii)
#print(jj)
sim_events[[ii]][[jj]] <- sample(obs_intensity_by_cat[[jj]],pois_distr[ii,jj],replace = TRUE)
}
}
}
View(sim_events)
plot(dpois(x=1:1000,lambda=0.1667))
# Separate events into two buckets, Cat1-3 and Cat4-5
df_events_US_landf_losses_cat1_5 <- mutate(df_events_US_landf_losses_cat1_5,
TwoBinClass = case_when((SaffSimpson_max_wind >= 1 & SaffSimpson_max_wind <=3) ~1,
(SaffSimpson_max_wind >= 4 & SaffSimpson_max_wind <=5) ~2))
# All observed magnitudes for events with losses associated with them
obs_intensity_by_cat <- list()
for(ii in 1:2){
obs_intensity_by_cat[[ii]] <- df_events_US_landf_losses_cat1_5$MaxWind_US[ which(df_events_US_landf_losses_cat1_5$TwoBinClass == ii) ]
}
# List with losses for events in each category
obs_loss_by_cat <- list()
for(ii in 1:2){
obs_loss_by_cat[[ii]] <- df_events_US_landf_losses_cat1_5$agg_loss[ which(df_events_US_landf_losses_cat1_5$TwoBinClass == ii) ]
}
# Hurricane rates
All.Data <- c(1.4235, 0.1588)
Reliable.Landfall.Years <- c(1.2975, 0.1901)
AMO.Calc.Years <- c(1.3949, 0.1528)
ENSO.Calc.Years <- c(1.1111, 0.1806)
AMOpos <- c(1.5385, 0.1758)
AMOneg <- c(1.2344, 0.125)
nosulfate <- c(1.507, 0.1972)
elnino <- c(0.6111, 0.1667)
lanina <- c(1.5, 0.1667)
Knutson2013 <- c(0.8812,0.2642)
Knutson2015 <- c(1.0838,0.2699)
Wehner2018 <- c(1.1104,0.2433)
Knutson2020 <- c(1.0443,0.2053)
n_samples <- 1e4
n_bin <- 2
Rank <- 1:n_samples
Prob  <- Rank/(length(Rank) + 1)
RP <- 1/Prob
# All.Data
obj_All.Data <- Resample(n_samples,n_bin,All.Data,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_All.Data <- unlist(obj_All.Data[1])
df_RP_eAll.Data <- data.frame(wind_All.Data,RP)
loss_All.Data <- matrix(obj_All.Data[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lAll.Data <- data.frame(loss_All.Data,RP)
decr_OEP_loss_All.Data <- matrix(obj_All.Data[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lAll.Data <- data.frame(decr_OEP_loss_All.Data,RP)
## Reliable.Landfall.Years
obj_Reliable.Landfall.Years <- Resample(n_samples,n_bin,Reliable.Landfall.Years,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_Reliable.Landfall.Years <- unlist(obj_Reliable.Landfall.Years[1])
df_RP_eReliable.Landfall.Years <- data.frame(wind_Reliable.Landfall.Years,RP)
loss_Reliable.Landfall.Years <- matrix(obj_Reliable.Landfall.Years[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lReliable.Landfall.Years <- data.frame(loss_Reliable.Landfall.Years,RP)
decr_OEP_loss_Reliable.Landfall.Years <- matrix(obj_Reliable.Landfall.Years[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lReliable.Landfall.Years <- data.frame(decr_OEP_loss_Reliable.Landfall.Years,RP)
## AMO.Calc.Years
obj_AMO.Calc.Years <- Resample(n_samples,n_bin,AMO.Calc.Years,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_AMO.Calc.Years <- unlist(obj_AMO.Calc.Years[1])
df_RP_eAMO.Calc.Years <- data.frame(wind_AMO.Calc.Years,RP)
loss_AMO.Calc.Years <- matrix(obj_AMO.Calc.Years[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lAMO.Calc.Years <- data.frame(loss_AMO.Calc.Years,RP)
decr_OEP_loss_AMO.Calc.Years <- matrix(obj_AMO.Calc.Years[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lAMO.Calc.Years <- data.frame(decr_OEP_loss_AMO.Calc.Years,RP)
## ENSO.Calc.Years
obj_ENSO.Calc.Years <- Resample(n_samples,n_bin,ENSO.Calc.Years,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_ENSO.Calc.Years <- unlist(obj_ENSO.Calc.Years[1])
df_RP_eENSO.Calc.Years <- data.frame(wind_ENSO.Calc.Years,RP)
loss_ENSO.Calc.Years <- matrix(obj_ENSO.Calc.Years[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lENSO.Calc.Years <- data.frame(loss_ENSO.Calc.Years,RP)
decr_OEP_loss_ENSO.Calc.Years <- matrix(obj_ENSO.Calc.Years[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lENSO.Calc.Years<- data.frame(decr_OEP_loss_ENSO.Calc.Years,RP)
# AMOpos
obj_AMOpos <- Resample(n_samples,n_bin,AMOpos,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_AMOpos <- unlist(obj_AMOpos[1])
df_RP_eAMOpos <- data.frame(wind_AMOpos,RP)
loss_AMOpos <- matrix(obj_AMOpos[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lAMOpos <- data.frame(loss_AMOpos,RP)
decr_OEP_loss_AMOpos <- matrix(obj_AMOpos[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lAMOpos <- data.frame(decr_OEP_loss_AMOpos,RP)
# AMOneg
obj_AMOneg <- Resample(n_samples,n_bin,AMOneg,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_AMOneg <- unlist(obj_AMOneg[1])
df_RP_eAMOneg <- data.frame(wind_AMOneg,RP)
loss_AMOneg <- matrix(obj_AMOneg[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lAMOneg <- data.frame(loss_AMOneg,RP)
decr_OEP_loss_AMOneg <- matrix(obj_AMOneg[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lAMOneg <- data.frame(decr_OEP_loss_AMOneg,RP)
## nosulfate
obj_nosulfate <- Resample(n_samples,n_bin,nosulfate,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_nosulfate <- unlist(obj_nosulfate[1])
df_RP_enosulfate <- data.frame(wind_nosulfate,RP)
loss_nosulfate <- matrix(obj_nosulfate[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lnosulfate <- data.frame(loss_nosulfate,RP)
decr_OEP_loss_nosulfate <- matrix(obj_nosulfate[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lnosulfate <- data.frame(decr_OEP_loss_nosulfate,RP)
## elnino
obj_elnino <- Resample(n_samples,n_bin,elnino,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_elnino <- unlist(obj_elnino[1])
df_RP_eelnino <- data.frame(wind_elnino,RP)
loss_elnino <- matrix(obj_elnino[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lelnino <- data.frame(loss_elnino,RP)
decr_OEP_loss_elnino <- matrix(obj_elnino[3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_lelnino <- data.frame(decr_OEP_loss_elnino,RP)
## lanina
obj_lanina <- Resample(n_samples,n_bin,lanina,obs_intensity_by_cat,obs_loss_by_cat,get_OPE = TRUE)
wind_lanina <- unlist(obj_lanina[1])
df_RP_elanina <- data.frame(wind_lanina,RP)
loss_lanina <- matrix(obj_lanina[2][[1]], nrow = n_samples, ncol = 1)
df_RP_llanina <- data.frame(loss_lanina,RP)
decr_OEP_loss_lanina  <- matrix(obj_lanina [3][[1]], nrow = n_samples, ncol = 1)
df_RP_OEP_llanina  <- data.frame(decr_OEP_loss_lanina,RP)
## Knutson2013
obj_Knutson2013 <- Resample(n_samples,n_bin,Knutson2013,obs_intensity_by_cat,obs_loss_by_cat)
wind_Knutson2013 <- unlist(obj_Knutson2013[1])
df_RP_eKnutson2013 <- data.frame(wind_Knutson2013,RP)
loss_Knutson2013 <- matrix(obj_Knutson2013[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lKnutson2013 <- data.frame(loss_Knutson2013,RP)
## Knutson2015
obj_Knutson2015 <- Resample(n_samples,n_bin,Knutson2015,obs_intensity_by_cat,obs_loss_by_cat)
wind_Knutson2015 <- unlist(obj_Knutson2015[1])
df_RP_eKnutson2015 <- data.frame(wind_Knutson2015,RP)
loss_Knutson2015 <- matrix(obj_Knutson2015[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lKnutson2015 <- data.frame(loss_Knutson2015,RP)
## Wehner2018
obj_Wehner2018 <- Resample(n_samples,n_bin,Wehner2018,obs_intensity_by_cat,obs_loss_by_cat)
wind_Wehner2018 <- unlist(obj_Wehner2018[1])
df_RP_eWehner2018 <- data.frame(wind_Wehner2018,RP)
loss_Wehner2018 <- matrix(obj_Wehner2018[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lWehner2018 <- data.frame(loss_Wehner2018,RP)
## Knutson2020
obj_Knutson2020 <- Resample(n_samples,n_bin,Knutson2020,obs_intensity_by_cat,obs_loss_by_cat)
wind_Knutson2020 <- unlist(obj_Knutson2020[1])
df_RP_eKnutson2020 <- data.frame(wind_Knutson2020,RP)
loss_Knutson2020 <- matrix(obj_Knutson2020[2][[1]], nrow = n_samples, ncol = 1)
df_RP_lKnutson2020 <- data.frame(loss_Knutson2020,RP)
View(df_RP_eReliable.Landfall.Years)
View(df_RP_eelnino)
View(df_RP_elanina)
plot(dpois(x=1:1000,lambda=0.1667))
plot(dpois(x=1:100,lambda=0.1667))
44737-42792
1945*100/42792
300*0.05
300*0.1]5
300*0.15
setwd("~/Dropbox/SAFE-R-main/R")
install.packages("caTools")
install.packages("FRACTION")
install.packages("cowplot")
install.packages("devtools")
install.packages("~/Dropbox/SAFE-R-main/calibrater_0.51.tar.gz", repos = NULL, type = "source")
