% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_convergence.R
\name{plot_convergence}
\alias{plot_convergence}
\title{Plot convergence
Draws the plot to analise the convergence}
\usage{
plot_convergence(
  n,
  est,
  estl = NULL,
  estu = NULL,
  ex = NULL,
  labels = NULL,
  ylim = NULL,
  col = 1:M,
  lty = 1:(M - 1),
  ...
)
}
\arguments{
\item{n}{vector \code{P} of number of model evaluations}

\item{est}{matrix \code{(P, M)} with the mean of the indices.}

\item{estl}{matrix \code{(P, M)} with the lower bound of the estimates of the indices. Default \code{estl = NULL}}

\item{estu}{matrix \code{(P, M)} with the lower bound of the estimates  of the indices. Default \code{estu = NULL}}

\item{ex}{exact values to be drawn as a line. Default \code{ex = NULL}}

\item{labels}{labels for legend. Default \code{labels = NULL}}

\item{ylim}{limits of the y-axis. Default  \code{ylim = NULL}}

\item{col}{colors for the plot. Default  \code{col = 1:M}}

\item{lty}{line type. Default  \code{lty = 1:(M-1)}}

\item{...}{others arguments to be passed in \code{\link{plot}}}
}
\description{
Plot convergence
Draws the plot to analise the convergence
}
\examples{
# Setup the model and define input ranges
fun_test  <- "ishigami_homma_function"
M <- 3
distr_fun <- "unif"
distrpar <-  c(-pi, pi)
# Compute the exact values of the output variance (V) and of 
# the first-order (Si_ex) and total-order (STi_ex) 
# variance-based sensitivity indices (this is possible in this
# very specific case because V, Si_ex and STi_ex can be computed
# analytically)
ihfun <- ishigami_homma_function(runif(M))
Si_ex <- attributes(ihfun)$Si_ex
STi_ex <- attributes(ihfun)$STi_ex
# Sample parameter space:
SampStrategy <- "lhs"
N <- 3000
X <- AAT_sampling(SampStrategy, M, distr_fun, distrpar, 2 * N)
# Apply resampling strategy for the efficient approximation of the indices:
XABC <- vbsa_resampling(X)
# Run the model and compute selected model output at sampled parameter
# sets:
YA <- model_evaluation(fun_test, XABC$XA) # size (N,1)
YB <- model_evaluation(fun_test, XABC$XB) # size (N,1)
YC <- model_evaluation(fun_test, XABC$XC) # size (N*M,1)
# Analyze convergence of sensitivity indices:
NN <- seq(N / 5, N, by = N/5)
conv <- vbsa_convergence(c(YA, YB, YC), M, NN)
Si <- conv$Si
STi <- conv$STi
par(mfrow = c(1, 2))
plot_convergence(NN * (M + 2), Si, ex = Si_ex, 
xlab = "model evals", ylab = "main effect")
plot_convergence(NN * (M + 2), STi, ex = STi_ex, 
xlab = "model evals", ylab = "total effect")
# With bootstrap
Nboot <- 100
conv100 <- vbsa_convergence(c(YA, YB, YC), M, NN, Nboot)
Si100 <- conv100$Si
STi100 <- conv100$STi
Sil100 <- conv100$Si_lb
Siu100 <- conv100$Si_ub
STil100 <- conv100$STi_lb
STiu100 <- conv100$STi_ub
par(mfrow = c(1, 2))
plot_convergence(NN * (M + 2), Si100, Sil100, Siu100, ex = Si_ex, 
xlab = "model evals", ylab = "main effect")
plot_convergence(NN * (M + 2), STi100, STil100, STiu100, ex = STi_ex, 
xlab = "model evals", ylab = "total effect")
}
